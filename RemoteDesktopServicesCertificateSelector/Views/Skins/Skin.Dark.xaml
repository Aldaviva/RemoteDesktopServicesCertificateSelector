<!-- ReSharper disable InconsistentNaming - many of these resource keys are autogenerated -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:converters="clr-namespace:RemoteDesktopServicesCertificateSelector.Views.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Skin.Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="textBrush" Color="White" />
    <SolidColorBrush x:Key="invalidBrush" Color="OrangeRed" />
    <SolidColorBrush x:Key="dataGridCellSelectedBackground" Color="#11FFFFFF" />
    <SolidColorBrush x:Key="windowBackgroundBrush" Color="#202020"></SolidColorBrush>

    <converters:ColumnSortDirectionToVisibilityConverter x:Key="columnSortDirectionToVisibilityConverter" />
    <converters:ColumnSortDirectionToRotationConverter x:Key="columnSortDirectionToRotationConverter" />

    <Style TargetType="Window" x:Key="windowStyle">
        <Setter Property="Background" Value="{StaticResource windowBackgroundBrush}" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource textBrush}" />
    </Style>

    <!-- IconButton -->
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="GreenYellow" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="Gold" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="blue" /> <!-- changed by Ben -->
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="yellow" /> <!-- changed by Ben -->
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />
    <ControlTemplate x:Key="iconButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="iconButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="5,1,6,1" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Background" Value="red" />
        <Setter Property="Foreground" Value="{StaticResource textBrush}" />
        <Setter Property="Template" Value="{StaticResource iconButtonTemplate}" />
        <Setter Property="BorderBrush" Value="Green" />
    </Style>

    <Style x:Key="dataGridStyle" TargetType="DataGrid">
        <Setter Property="BorderBrush" Value="#FFE511F1" />
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="columnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource textBrush}" />
        <Setter Property="Background" Value="{DynamicResource windowBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="1 0 0 0" />
        <Setter Property="BorderBrush" Value="white" />
        <Setter Property="Padding" Value="6 6 6 4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <theme:DataGridHeaderBorder Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    IsPressed="{TemplateBinding IsPressed}"
                                                    IsHovered="{TemplateBinding IsMouseOver}"
                                                    IsClickable="{TemplateBinding CanUserSort}"
                                                    Padding="{TemplateBinding Padding}"
                                                    SortDirection="{TemplateBinding SortDirection}"
                                                    SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
                                                    SeparatorBrush="{TemplateBinding SeparatorBrush}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </theme:DataGridHeaderBorder>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Canvas HorizontalAlignment="Center" VerticalAlignment="Top">
                            <Label x:Name="sortIndicator2" Content="›" FontSize="16" Width="15" Height="35" Margin="-8 -14 0 0"
                                   Visibility="{TemplateBinding SortDirection, Converter={StaticResource columnSortDirectionToVisibilityConverter}}"
                                   FontWeight="Light">
                                <Label.RenderTransform>
                                    <RotateTransform CenterX="7.5" CenterY="17.5"
                                                     Angle="{Binding SortDirection, RelativeSource={RelativeSource AncestorType=DataGridColumnHeader}, Converter={StaticResource columnSortDirectionToRotationConverter}}" />
                                </Label.RenderTransform>
                            </Label>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="CanUserSort" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Purple" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True" />
                    <Condition Property="CanUserSort" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="Aqua" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="invisibleColumnHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource columnHeaderStyle}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

</ResourceDictionary>